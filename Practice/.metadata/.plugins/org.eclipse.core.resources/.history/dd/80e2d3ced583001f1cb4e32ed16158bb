import java.util.Scanner;

public class Vidu {
	public static void main(String[] args) {
//		Scanner sc = new Scanner (System.in);
//		String s;
//		System.out.println("Nhập vào chuỗi: ");
//		s = sc.nextLine();
//		System.out.println("-----");
//		
////		hàm length()
//		System.out.println(s.length());
////		hàm charAt(index): lấy ra kí tự ở vị trí bất kì
//		for (int i = 0; i < s.length(); i++) {
//			System.out.println("vị trí " + i + " là: " + s.charAt(i));
//		}
//		
//		
//		char[] arrChar = new char[100];
////		getChars(indexStart, indexEnd - 1, arr, indexStartOfArr): lấy nhiều kí tự ra
//		s.getChars(0, 2, arrChar, 0);
//		System.out.println(arrChar);
		
		
		
//		So sánh chuỗi
//		equals: so sánh có phân biệt chữ hoa, thường
		String s1 = "thebao";
		String s2 = "THEBAO";
		String s3 = "thebao";
		
		System.out.println("s1 equals s2: " + s1.equals(s2));
		System.out.println("s1 equals s3: " + s1.equals(s3));
		System.out.println();
		
//		equalsIgnoreCase: cũng so sánh nhưng ko phân biệt hoa, thường
		System.out.println("s1 equals s2: " + s1.equalsIgnoreCase(s2));
		System.out.println("s1 equals s3: " + s1.equalsIgnoreCase(s3));
		System.out.println();
		
//		hàm compareTo => so sánh > < = : phân biệt chữ hoa thường
//		Nếu ra số âm thì sv1 < sv2
//		Nếu ra số dương thì sv1 > sv3
//		Nếu ra số 0 thì sv1 và sv4 bằng nhau
		String sv1 = "Nguyễn Văn A";
		String sv2 = "Nguyễn Văn B";
		String sv3 = "Nguyễn Văn";
		String sv4 = "Nguyễn Văn A";
		
		System.out.println("sv1 compareTo sv2: " + sv1.compareTo(sv2));
		System.out.println("sv1 compareTo sv3: " + sv1.compareTo(sv3));
		System.out.println("sv1 compareTo sv4: " + sv1.compareTo(sv4));
		
//		Tương tự có hàm compareToIgnoreCase() thì nó không phân biệt chữ hoa thương
//		khi so sanh thôi
		
//		Hàm regionMatches => so sánh 1 đoạn
		String r1 = "TITV.vn";
		String r2 = "TV.v";
		
//		nó so sánh từ kí tự indexStart = 2 của r1, số lượng
//		4 kí tự, so sánh r2 với indexStart = 0
		boolean check = r1.regionMatches(2, r2, 0, 4);
		System.out.println(check);
	}
}
